name: release

on: 
  push:
      tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
    - name: Build package
      run: |
        go build -v ./...
        
  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
    - name: Test package
      run: |
        go test -v ./...


  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Create release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          title: "Automatic Release"

  add-builds:
    needs: [build]
    name: Build package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: ["386", amd64]
        exclude:  
          - goarch: "386"
            goos: darwin

    steps:
    - uses: actions/checkout@v2
    - name: create go binaries
      uses: wangyoucao577/go-release-action@v1.16
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        extra_files: LICENSE README.md
        sha256sum: true

  docker:
    needs: [build]
    runs-on: ubuntu-latests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: jon4hz/go-binance-local-orderbook
          context: .
          file: ./channel_bot.Dockerfile
          cache-from: type=registry,ref=jon4hz/go-binance-local-orderbook:cache
          cache-to: type=registry,ref=jon4hz/go-binance-local-orderbook:cache

      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}